{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react'; // import '../client/dist/css/main.css'\n\nvar Day = function Day(_ref) {\n  var date = _ref.date,\n      temperature = _ref.temperature,\n      clouds = _ref.clouds,\n      pop = _ref.pop,\n      condition = _ref.condition,\n      description = _ref.description,\n      icon = _ref.icon;\n  // UTC to local date conversion\n  var d = new Date(0);\n  d.setUTCSeconds(date);\n  var daystring = d.toString();\n  var weekday = daystring.substr(0, 3);\n  var month = daystring.substr(4, 3);\n  var day = daystring.substr(8, 2);\n  var year = daystring.substr(11, 4);\n  return __jsx(\"div\", {\n    className: \"day\"\n  }, __jsx(\"span\", {\n    className: \"weekday\"\n  }, \" \", weekday, \" \"), __jsx(\"div\", {\n    className: \"temperature\"\n  }, __jsx(\"span\", {\n    className: \"temphigh\"\n  }, \" \", Math.round(temperature.max), \"\\xB0 \"), __jsx(\"span\", {\n    className: \"templow\"\n  }, \" / \", Math.round(temperature.min), \"\\xB0 \")), __jsx(\"div\", {\n    className: \"circle\"\n  }, __jsx(\"img\", {\n    className: \"icon\",\n    src: \"http://openweathermap.org/img/wn/\".concat(icon, \".png\"),\n    alt: \"Weather Icon\"\n  })), __jsx(\"span\", {\n    className: \"condition\"\n  }, \" \", condition, \" \"), __jsx(\"div\", {\n    className: \"precipitation\"\n  }, __jsx(\"i\", {\n    className: \"fas fa-tint\"\n  }), __jsx(\"span\", {\n    className: \"pop\"\n  }, \" \", Math.round(pop * 100), \"% \")), __jsx(\"span\", {\n    className: \"date\"\n  }, \" \", month + ' ' + day, \" \"));\n};\n\n_c = Day;\nexport default Day;\n\nvar _c;\n\n$RefreshReg$(_c, \"Day\");","map":{"version":3,"sources":["/Users/jaketurchetta/Desktop/PersonalProjects/tech-test/pages/Day.jsx"],"names":["React","Day","date","temperature","clouds","pop","condition","description","icon","d","Date","setUTCSeconds","daystring","toString","weekday","substr","month","day","year","Math","round","max","min"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,OAAsE;AAAA,MAAnEC,IAAmE,QAAnEA,IAAmE;AAAA,MAA7DC,WAA6D,QAA7DA,WAA6D;AAAA,MAAhDC,MAAgD,QAAhDA,MAAgD;AAAA,MAAxCC,GAAwC,QAAxCA,GAAwC;AAAA,MAAnCC,SAAmC,QAAnCA,SAAmC;AAAA,MAAxBC,WAAwB,QAAxBA,WAAwB;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAEhF;AACA,MAAMC,CAAC,GAAG,IAAIC,IAAJ,CAAS,CAAT,CAAV;AACAD,EAAAA,CAAC,CAACE,aAAF,CAAgBT,IAAhB;AACA,MAAMU,SAAS,GAAGH,CAAC,CAACI,QAAF,EAAlB;AACA,MAAMC,OAAO,GAAGF,SAAS,CAACG,MAAV,CAAiB,CAAjB,EAAmB,CAAnB,CAAhB;AACA,MAAMC,KAAK,GAAGJ,SAAS,CAACG,MAAV,CAAiB,CAAjB,EAAmB,CAAnB,CAAd;AACA,MAAME,GAAG,GAAGL,SAAS,CAACG,MAAV,CAAiB,CAAjB,EAAmB,CAAnB,CAAZ;AACA,MAAMG,IAAI,GAAGN,SAAS,CAACG,MAAV,CAAiB,EAAjB,EAAoB,CAApB,CAAb;AAEA,SACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAM,IAAA,SAAS,EAAC;AAAhB,UAA4BD,OAA5B,MADF,EAEE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAM,IAAA,SAAS,EAAC;AAAhB,UAA6BK,IAAI,CAACC,KAAL,CAAWjB,WAAW,CAACkB,GAAvB,CAA7B,UADF,EAEE;AAAM,IAAA,SAAS,EAAC;AAAhB,YAA8BF,IAAI,CAACC,KAAL,CAAWjB,WAAW,CAACmB,GAAvB,CAA9B,UAFF,CAFF,EAME;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,IAAA,GAAG,6CAAsCd,IAAtC,SAAzB;AAA2E,IAAA,GAAG,EAAC;AAA/E,IADF,CANF,EASE;AAAM,IAAA,SAAS,EAAC;AAAhB,UAA8BF,SAA9B,MATF,EAUE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAG,IAAA,SAAS,EAAC;AAAb,IADF,EAEE;AAAM,IAAA,SAAS,EAAC;AAAhB,UAAwBa,IAAI,CAACC,KAAL,CAAWf,GAAG,GAAC,GAAf,CAAxB,OAFF,CAVF,EAeE;AAAM,IAAA,SAAS,EAAC;AAAhB,UAAyBW,KAAK,GAAG,GAAR,GAAcC,GAAvC,MAfF,CADF;AAmBD,CA9BD;;KAAMhB,G;AAgCN,eAAeA,GAAf","sourcesContent":["import React from 'react'\n// import '../client/dist/css/main.css'\n\nconst Day = ({ date, temperature, clouds, pop, condition, description, icon }) => {\n\n  // UTC to local date conversion\n  const d = new Date(0)\n  d.setUTCSeconds(date)\n  const daystring = d.toString()\n  const weekday = daystring.substr(0,3)\n  const month = daystring.substr(4,3)\n  const day = daystring.substr(8,2)\n  const year = daystring.substr(11,4)\n\n  return (\n    <div className='day'>\n      <span className='weekday'> {weekday} </span>\n      <div className='temperature'>\n        <span className='temphigh'> {Math.round(temperature.max)}° </span>\n        <span className='templow'> / {Math.round(temperature.min)}° </span>\n      </div>\n      <div className='circle' >\n        <img className='icon' src={`http://openweathermap.org/img/wn/${icon}.png`} alt='Weather Icon' />\n      </div>\n      <span className='condition'> {condition} </span>\n      <div className='precipitation'>\n        <i className='fas fa-tint'></i>\n        <span className='pop'> {Math.round(pop*100)}% </span>\n      </div>\n\n      <span className='date'> {month + ' ' + day} </span>\n    </div>\n  )\n}\n\nexport default Day\n"]},"metadata":{},"sourceType":"module"}