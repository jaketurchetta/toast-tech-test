{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport '../client/dist/css/main.css';\nimport { GOOGLE_API_KEY, WEATHER_API_KEY } from '../config.js';\nimport axios from 'axios';\nimport Header from './Header.jsx';\nimport Search from './Search.jsx';\nimport Week from './Week.jsx';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      zip: '02130',\n      city: 'Boston',\n      state: 'MA',\n      lat: 42.35659589999999,\n      lng: -71.0564828,\n      dailyWeather: []\n    };\n    this.getGeolocation = this.getGeolocation.bind(this);\n    this.getAddress = this.getAddress.bind(this);\n    this.getWeather = this.getWeather.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.validateInput = this.validateInput.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.getGeolocation(this.getWeather);\n  } // HTTP REQUESTS\n\n\n  getGeolocation(callback) {\n    axios.get('http://www.geoplugin.net/json.gp').then(response => {\n      this.setState({\n        lat: response.data.geoplugin_latitude,\n        lng: response.data.geoplugin_longitude,\n        city: response.data.geoplugin_city,\n        state: response.data.geoplugin_regionCode,\n        zip: ''\n      });\n    }).then(callback()).catch(err => console.log(err));\n  }\n\n  getAddress(zip, callback) {\n    axios.get(`https://maps.googleapis.com/maps/api/geocode/json?address=${zip}&key=${GOOGLE_API_KEY}`).then(response => {\n      this.setState({\n        zip: response.data.results[0].address_components[0].short_name,\n        city: response.data.results[0].address_components[1].long_name,\n        state: response.data.results[0].address_components[3].short_name,\n        lat: response.data.results[0].geometry.location.lat,\n        lng: response.data.results[0].geometry.location.lng\n      });\n    }).then(callback()).catch(err => console.log(err));\n  }\n\n  getWeather() {\n    axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${this.state.lat}&lon=${this.state.lng}&exclude=minutely,hourly&appid=${WEATHER_API_KEY}&units=imperial`).then(response => {\n      this.setState({\n        dailyWeather: response.data.daily.slice(0, 7)\n      });\n    }).catch(err => console.log(err));\n  } // FORM HANDLERS\n\n\n  handleChange(event) {\n    this.setState({\n      zip: event.target.value\n    });\n  }\n\n  validateInput(input) {\n    let num = Number(input);\n    let len = input.length;\n\n    if (isNaN(num) || len !== 5) {\n      alert('Please enter a valid 5-digit ZIP code.');\n      return false;\n    }\n\n    return true;\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    if (this.validateInput(this.state.zip)) {\n      this.getAddress(this.state.zip, this.getWeather);\n    }\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"appcontainer\"\n    }, __jsx(Header, {\n      city: this.state.city,\n      state: this.state.state\n    }), __jsx(Search, {\n      handleChange: this.handleChange,\n      handleSubmit: this.handleSubmit\n    }), __jsx(Week, {\n      weather: this.state.dailyWeather\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/jaketurchetta/Desktop/PersonalProjects/tech-test/pages/App.jsx"],"names":["React","GOOGLE_API_KEY","WEATHER_API_KEY","axios","Header","Search","Week","App","Component","constructor","props","state","zip","city","lat","lng","dailyWeather","getGeolocation","bind","getAddress","getWeather","handleChange","validateInput","handleSubmit","componentDidMount","callback","get","then","response","setState","data","geoplugin_latitude","geoplugin_longitude","geoplugin_city","geoplugin_regionCode","catch","err","console","log","results","address_components","short_name","long_name","geometry","location","daily","slice","event","target","value","input","num","Number","len","length","isNaN","alert","preventDefault","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,6BAAP;AACA,SAASC,cAAT,EAAyBC,eAAzB,QAAgD,cAAhD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AAEA,eAAe,MAAMC,GAAN,SAAkBP,KAAK,CAACQ,SAAxB,CAAkC;AAE/CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,GAAG,EAAE,OADM;AAEXC,MAAAA,IAAI,EAAE,QAFK;AAGXF,MAAAA,KAAK,EAAE,IAHI;AAIXG,MAAAA,GAAG,EAAE,iBAJM;AAKXC,MAAAA,GAAG,EAAE,CAAC,UALK;AAMXC,MAAAA,YAAY,EAAE;AANH,KAAb;AAQA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKE,UAAL,GAAkB,KAAKA,UAAL,CAAgBF,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKG,YAAL,GAAoB,KAAKA,YAAL,CAAkBH,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKI,aAAL,GAAqB,KAAKA,aAAL,CAAmBJ,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKK,YAAL,GAAoB,KAAKA,YAAL,CAAkBL,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDM,EAAAA,iBAAiB,GAAG;AAClB,SAAKP,cAAL,CAAoB,KAAKG,UAAzB;AACD,GAtB8C,CAwB/C;;;AACAH,EAAAA,cAAc,CAACQ,QAAD,EAAW;AACvBtB,IAAAA,KAAK,CAACuB,GAAN,CAAU,kCAAV,EACGC,IADH,CACQC,QAAQ,IAAI;AAChB,WAAKC,QAAL,CAAc;AACZf,QAAAA,GAAG,EAAEc,QAAQ,CAACE,IAAT,CAAcC,kBADP;AAEZhB,QAAAA,GAAG,EAAEa,QAAQ,CAACE,IAAT,CAAcE,mBAFP;AAGZnB,QAAAA,IAAI,EAAEe,QAAQ,CAACE,IAAT,CAAcG,cAHR;AAIZtB,QAAAA,KAAK,EAAEiB,QAAQ,CAACE,IAAT,CAAcI,oBAJT;AAKZtB,QAAAA,GAAG,EAAE;AALO,OAAd;AAOD,KATH,EAUGe,IAVH,CAUQF,QAAQ,EAVhB,EAWGU,KAXH,CAWSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAXhB;AAYD;;AAEDjB,EAAAA,UAAU,CAACP,GAAD,EAAMa,QAAN,EAAgB;AACxBtB,IAAAA,KAAK,CAACuB,GAAN,CAAW,6DAA4Dd,GAAI,QAAOX,cAAe,EAAjG,EACG0B,IADH,CACQC,QAAQ,IAAI;AAChB,WAAKC,QAAL,CAAc;AACVjB,QAAAA,GAAG,EAAEgB,QAAQ,CAACE,IAAT,CAAcS,OAAd,CAAsB,CAAtB,EAAyBC,kBAAzB,CAA4C,CAA5C,EAA+CC,UAD1C;AAEV5B,QAAAA,IAAI,EAAEe,QAAQ,CAACE,IAAT,CAAcS,OAAd,CAAsB,CAAtB,EAAyBC,kBAAzB,CAA4C,CAA5C,EAA+CE,SAF3C;AAGV/B,QAAAA,KAAK,EAAEiB,QAAQ,CAACE,IAAT,CAAcS,OAAd,CAAsB,CAAtB,EAAyBC,kBAAzB,CAA4C,CAA5C,EAA+CC,UAH5C;AAIV3B,QAAAA,GAAG,EAAEc,QAAQ,CAACE,IAAT,CAAcS,OAAd,CAAsB,CAAtB,EAAyBI,QAAzB,CAAkCC,QAAlC,CAA2C9B,GAJtC;AAKVC,QAAAA,GAAG,EAAEa,QAAQ,CAACE,IAAT,CAAcS,OAAd,CAAsB,CAAtB,EAAyBI,QAAzB,CAAkCC,QAAlC,CAA2C7B;AALtC,OAAd;AAOD,KATH,EAUGY,IAVH,CAUQF,QAAQ,EAVhB,EAWGU,KAXH,CAWSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAXhB;AAYD;;AAEDhB,EAAAA,UAAU,GAAG;AACXjB,IAAAA,KAAK,CAACuB,GAAN,CAAW,uDAAsD,KAAKf,KAAL,CAAWG,GAAI,QAAO,KAAKH,KAAL,CAAWI,GAAI,kCAAiCb,eAAgB,iBAAvJ,EACGyB,IADH,CACQC,QAAQ,IAAI;AAChB,WAAKC,QAAL,CAAc;AACZb,QAAAA,YAAY,EAAEY,QAAQ,CAACE,IAAT,CAAce,KAAd,CAAoBC,KAApB,CAA0B,CAA1B,EAA4B,CAA5B;AADF,OAAd;AAGD,KALH,EAMGX,KANH,CAMSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANhB;AAOD,GA/D8C,CAiE/C;;;AACAf,EAAAA,YAAY,CAAC0B,KAAD,EAAQ;AAClB,SAAKlB,QAAL,CAAc;AAACjB,MAAAA,GAAG,EAAEmC,KAAK,CAACC,MAAN,CAAaC;AAAnB,KAAd;AACD;;AAED3B,EAAAA,aAAa,CAAC4B,KAAD,EAAQ;AACnB,QAAIC,GAAG,GAAGC,MAAM,CAACF,KAAD,CAAhB;AACA,QAAIG,GAAG,GAAGH,KAAK,CAACI,MAAhB;;AACA,QAAIC,KAAK,CAACJ,GAAD,CAAL,IAAcE,GAAG,KAAK,CAA1B,EAA6B;AAC3BG,MAAAA,KAAK,CAAC,wCAAD,CAAL;AACA,aAAO,KAAP;AACD;;AACD,WAAO,IAAP;AACD;;AAEDjC,EAAAA,YAAY,CAACwB,KAAD,EAAQ;AAClBA,IAAAA,KAAK,CAACU,cAAN;;AACA,QAAI,KAAKnC,aAAL,CAAmB,KAAKX,KAAL,CAAWC,GAA9B,CAAJ,EAAwC;AACtC,WAAKO,UAAL,CAAgB,KAAKR,KAAL,CAAWC,GAA3B,EAAgC,KAAKQ,UAArC;AACD;AACF;;AAEDsC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE,MAAC,MAAD;AAAQ,MAAA,IAAI,EAAE,KAAK/C,KAAL,CAAWE,IAAzB;AAA+B,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWA;AAAjD,MADF,EAEE,MAAC,MAAD;AAAQ,MAAA,YAAY,EAAE,KAAKU,YAA3B;AAAyC,MAAA,YAAY,EAAE,KAAKE;AAA5D,MAFF,EAGE,MAAC,IAAD;AAAM,MAAA,OAAO,EAAE,KAAKZ,KAAL,CAAWK;AAA1B,MAHF,CADF;AAOD;;AA/F8C","sourcesContent":["import React from 'react'\nimport '../client/dist/css/main.css'\nimport { GOOGLE_API_KEY, WEATHER_API_KEY } from '../config.js'\nimport axios from 'axios'\nimport Header from './Header.jsx'\nimport Search from './Search.jsx'\nimport Week from './Week.jsx'\n\nexport default class App extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      zip: '02130',\n      city: 'Boston',\n      state: 'MA',\n      lat: 42.35659589999999,\n      lng: -71.0564828,\n      dailyWeather: []\n    }\n    this.getGeolocation = this.getGeolocation.bind(this)\n    this.getAddress = this.getAddress.bind(this)\n    this.getWeather = this.getWeather.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    this.validateInput = this.validateInput.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  componentDidMount() {\n    this.getGeolocation(this.getWeather)\n  }\n\n  // HTTP REQUESTS\n  getGeolocation(callback) {\n    axios.get('http://www.geoplugin.net/json.gp')\n      .then(response => {\n        this.setState({\n          lat: response.data.geoplugin_latitude,\n          lng: response.data.geoplugin_longitude,\n          city: response.data.geoplugin_city,\n          state: response.data.geoplugin_regionCode,\n          zip: ''\n        })\n      })\n      .then(callback())\n      .catch(err => console.log(err))\n  }\n\n  getAddress(zip, callback) {\n    axios.get(`https://maps.googleapis.com/maps/api/geocode/json?address=${zip}&key=${GOOGLE_API_KEY}`)\n      .then(response => {\n        this.setState({\n            zip: response.data.results[0].address_components[0].short_name,\n            city: response.data.results[0].address_components[1].long_name,\n            state: response.data.results[0].address_components[3].short_name,\n            lat: response.data.results[0].geometry.location.lat,\n            lng: response.data.results[0].geometry.location.lng,\n        })\n      })\n      .then(callback())\n      .catch(err => console.log(err))\n  }\n\n  getWeather() {\n    axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${this.state.lat}&lon=${this.state.lng}&exclude=minutely,hourly&appid=${WEATHER_API_KEY}&units=imperial`)\n      .then(response => {\n        this.setState({\n          dailyWeather: response.data.daily.slice(0,7)\n        })\n      })\n      .catch(err => console.log(err))\n  }\n\n  // FORM HANDLERS\n  handleChange(event) {\n    this.setState({zip: event.target.value})\n  }\n\n  validateInput(input) {\n    let num = Number(input)\n    let len = input.length\n    if (isNaN(num) || len !== 5) {\n      alert('Please enter a valid 5-digit ZIP code.')\n      return false\n    }\n    return true\n  }\n\n  handleSubmit(event) {\n    event.preventDefault()\n    if (this.validateInput(this.state.zip)) {\n      this.getAddress(this.state.zip, this.getWeather)\n    }\n  }\n\n  render() {\n    return (\n      <div className='appcontainer'>\n        <Header city={this.state.city} state={this.state.state} />\n        <Search handleChange={this.handleChange} handleSubmit={this.handleSubmit} />\n        <Week weather={this.state.dailyWeather} />\n      </div>\n    )\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}